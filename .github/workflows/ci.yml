name: CI

on:
  push:
    branches:
      - main
  pull_request:
  schedule:
    - cron: '0 12 * * *'

jobs:
  test:
    permissions:
      # Needed to access the workflow's OIDC identity.
      id-token: write
    strategy:
      matrix:
        python:
          - "3.7"
          - "3.8"
          - "3.9"
          - "3.10"
          - "3.11"
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@755da8c3cf115ac066823e79a1e1788f8940201b # v3.2.0

      - uses: actions/setup-python@5ccb29d8773c3f3f653e1705f474dfaa8a06a912
        with:
          python-version: ${{ matrix.python }}
          cache: "pip"
          cache-dependency-path: pyproject.toml

      - name: deps
        run: make dev SIGSTORE_EXTRA=test

      - name: test
        run: make test TEST_ARGS="-vv --showlocals"

      - name: test (offline)
        run: |
          # We use `unshare` to "un-share" the default networking namespace,
          # in effect running the tests as if the host is offline.
          # This in turn effectively exercises the correctness of our
          # "online-only" test markers, since any test that's online
          # but not marked as such will fail.
          unshare --map-root-user --net make test TEST_ARGS="--skip-online -vv --showlocals"

      - uses: ./.github/actions/upload-coverage

  coverage:
    runs-on: ubuntu-latest
    needs: [test]
    steps:
      - uses: actions/checkout@755da8c3cf115ac066823e79a1e1788f8940201b # v3.2.0
      - name: setup python
      - uses: actions/setup-python@5ccb29d8773c3f3f653e1705f474dfaa8a06a912
        with:
          python-version: '3.10'
      - run: pip install coverage[toml]
      - name: download coverage data
        uses: actions/download-artifact@v3.0.2
        with:
          name: coverage-data
      - name: combine coverage data
        id: combinecoverage
        run: |
          set +e
          python -m coverage combine
          echo "## python coverage" >> $GITHUB_STEP_SUMMARY
          echo '```' >> $GITHUB_STEP_SUMMARY
          python -m coverage report -m
          echo '```' >> $GITHUB_STEP_SUMMARY

